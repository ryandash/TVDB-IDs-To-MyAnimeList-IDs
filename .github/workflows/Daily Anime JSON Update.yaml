name: "Daily Anime JSON Update"

on:
  workflow_dispatch:
  schedule:
    - cron: "0 7 * * *"
  push:
    branches:
      - main
    paths:
      - "requirements.txt"

permissions:
  contents: write

concurrency:
  group: "anime-json-update"
  cancel-in-progress: true

jobs:
  scrape_jikan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.venv
          key: venv-${{ hashFiles('requirements.txt') }}
          restore-keys: venv-
    
      - name: Update min_map_data
        run: |
          if [ ! -d ~/.venv ]; then
            python -m venv ~/.venv
          fi
          source ~/.venv/bin/activate
          if [ ! -f ~/.venv/.installed ]; then
            pip install --upgrade -r requirements.txt
            touch ~/.venv/.installed
          fi
          
          python get_anime_data.py

      - name: Upload Jikan Data
        uses: actions/upload-artifact@v4
        with:
          name: jikan-data
          path: min_map_data/
          retention-days: 1

  scrape_worker:
    needs: scrape_jikan
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 20
      matrix:
        worker: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Download Jikan Data
        uses: actions/download-artifact@v5
        with:
          name: jikan-data
          path: min_map_data

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.venv
          key: venv-${{ hashFiles('requirements.txt') }}
          restore-keys: venv-

      - name: Setup Python & Dependencies
        run: |
          if [ ! -d ~/.venv ]; then
            python -m venv ~/.venv
          fi
          source ~/.venv/bin/activate
          if [ ! -f ~/.venv/.installed ]; then
            pip install --upgrade -r requirements.txt
            touch ~/.venv/.installed
          fi

      - name: Scrape Data
        run: |
          python thetvdb_scraper.py --worker ${{ matrix.worker }} --delete-folder
      
      - name: Upload page outputs
        uses: actions/upload-artifact@v4
        with:
          name: anime-data-${{ matrix.worker }}
          path: |
            anime_data/
          retention-days: 1
          compression-level: 9

      - name: Map Data
        run: |
          python mal_mapper.py

      - name: Upload page outputs
        uses: actions/upload-artifact@v4
        with:
          name: mapped-data-${{ matrix.worker }}
          path: |
            mapped-tvdb-ids-series.json
            mapped-tvdb-ids-movie.json
            unmapped-series.json
            unmapped-seasons.json
            unmapped-episodes.json
          retention-days: 1
          compression-level: 9

  combine_and_commit:
    name: Combine FILES & Commit
    needs: scrape_worker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Clean old Jikan Data
        run: rm -rf min_map_data

      - name: Download Jikan Data
        uses: actions/download-artifact@v5
        with:
          name: jikan-data
          path: min_map_data     

      - name: Download anime_data artifacts
        uses: actions/download-artifact@v5
        with:
          path: artifacts
          pattern: anime-data-*

      - name: Download mapped_data artifacts
        uses: actions/download-artifact@v5
        with:
          path: artifacts
          pattern: mapped-data-*

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.venv
          key: venv-${{ hashFiles('requirements.txt') }}
          restore-keys: venv-

      - name: Merge JSON files
        run: |
          if [ ! -d ~/.venv ]; then
            python -m venv ~/.venv
          fi
          source ~/.venv/bin/activate
          if [ ! -f ~/.venv/.installed ]; then
            pip install --upgrade -r requirements.txt
            touch ~/.venv/.installed
          fi

          python merge_files.py --input-dir artifacts
          python split_json.py

      - name: Count and Update README with counts
        run: |
          mapped_series=$(jq length mapped-tvdb-ids-series.json)
          mapped_movie=$(jq length mapped-tvdb-ids-movie.json)
          mapped=$((mapped_series + mapped_movie))
          unmapped_series=$(jq length unmapped-series.json)
          unmapped_seasons=$(jq length unmapped-seasons.json)
          unmapped_episodes=$(jq length unmapped-episodes.json)

          echo "Mapped: $mapped"
          echo "Unmapped Series: $unmapped_series"
          echo "Unmapped Seasons: $unmapped_seasons"
          echo "Unmapped Episodes: $unmapped_episodes"

          # Remove old section if it exists
          sed -i '/<!---counts-start--->/,/<!---counts-end--->/d' README.md

          # Append updated section
          {
            echo '<!---counts-start--->'
            echo "### TVDB → MAL Mapping Stats"
            echo ""
            echo "- ✅ Mapped IDs: **$mapped**"
            echo "- ❌ Unmapped Series: **$unmapped_series**"
            echo "- ❌ Unmapped Seasons: **$unmapped_seasons**"
            echo "- ❌ Unmapped Episodes: **$unmapped_episodes**"
            echo '<!---counts-end--->'
          } >> README.md

      - name: Delete artifacts folder
        run: |
          rm -rf artifacts/

      - name: Commit Changes if Needed
        shell: bash
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "GitHub Actions Bot"
          git add .

          if [ -n "$(git diff --cached)" ]; then
            date=$(date +%F)
            time=$(date +%T)
            git commit -m "Update JSON at $date $time"

            git fetch origin main
            git rebase origin/main || {
              git rebase --abort
              git merge -X ours origin/main
            }

            git push origin HEAD:main
            echo "JSON updated and changes pushed."
          else
            echo "No changes detected, skipping commit."
          fi
