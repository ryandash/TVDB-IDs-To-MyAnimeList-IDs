name: Scrape Single TVDB

on:
  repository_dispatch:
    types: [scrape-single-tvdb]

concurrency:
  group: scrape-single-tvdb
  cancel-in-progress: false

jobs:
  scrape:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright/python:v1.55.0-jammy
    steps:
      - name: Checkout Repository (shallow)
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          persist-credentials: false

      - name: Cache pip
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
          key: deps-${{ hashFiles('requirements.txt') }}
          restore-keys: deps-

      - name: Setup, Scrape & Process
        run: |
          apt-get update
          apt-get install -y jq
          pip install --upgrade pip
          pip install --upgrade --no-cache-dir -r requirements.txt
          python scrape_single_tvdb.py --episode ${{ github.event.client_payload.tvdb_id }} --delete-folder

          if [ ! -s "scraper_output.json" ] && [ ! -d "anime_data" ]; then
            echo "No new data scraped, exiting early."
            exit 0
          fi
          python mal_mapper.py
          python split_json.py
          mkdir -p /tmp/scraper-out
          cp -r anime_data api /tmp/scraper-out/ || true
          cp mapped-tvdb-ids.json unmapped-tvdb-ids.json /tmp/scraper-out/ || true

      - name: Checkout Repository (fresh, full history)
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Restore & Merge Scraper Output
        run: |
          python merge_files.py --input-dir /tmp/scraper-out

      - name: Update README with counts
        run: |
          mapped=$(jq length mapped-tvdb-ids.json)
          unmapped=$(jq length unmapped-tvdb-ids.json)
          sed -i '/<!---counts-start--->/,/<!---counts-end--->/d' README.md
          {
            echo '<!---counts-start--->'
            echo "### TVDB → MAL Mapping Stats"
            echo ""
            echo "- ✅ Mapped IDs: **$mapped**"
            echo "- ❌ Unmapped IDs: **$unmapped**"
            echo '<!---counts-end--->'
          } >> README.md

      - name: Commit Changes if Needed
        shell: bash
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "GitHub Actions Bot"
          git add .

          if [ -n "$(git diff --cached)" ]; then
            date=$(date +%F)
            time=$(date +%T)
            git commit -m "Update JSON at $date $time"

            git fetch origin main
            git rebase origin/main || {
              git rebase --abort
              git merge -X ours origin/main
            }

            git push origin HEAD:main
            echo "JSON updated and changes pushed."
          else
            echo "No changes detected, skipping commit."
          fi
